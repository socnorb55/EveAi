name: Prod Apply

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: tox
        run: |
          python -m pip install --upgrade pip
          pip install tox==3.27.1
          tox

      - name: Zip Package
        run: |
          mkdir build
          cp -rf eve_ai build
          cd build
          zip -r ../eve_ai.zip . -i .
          cd ..
          mkdir -p lambda_layer/python
          pip install -r eve_ai/lambda_code/requirements.txt -t lambda_layer/python
          cd lambda_layer
          zip -r ../lambda_layers.zip . -i .

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        run: |
          cd terraform
          terraform init -backend-config='bucket=terraform-state-file-aws-cloud-prod'
          terraform fmt -diff ./
          terraform validate
          terraform plan -out=tfplan -var-file='prod.tfvars'
          terraform show tfplan
          terraform apply

  build_pages:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  deploy_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  release:
    runs-on: ubuntu-latest
    needs: deploy_pages
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          release_name: "Release <RELEASE_TAG>"
          use_github_release_notes: true