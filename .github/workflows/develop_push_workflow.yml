name: Develop Apply

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox

  zip_package:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Zip Package
        run: |
          apt-get update,
          apt-get install -y -q zip,
          mkdir build,
          cp -rf eve_ai build,
          cd build,
          zip ../eve_ai.zip -r .,
          cd ..,
          mkdir -p lambda_layer/python,
          pip install -r eve_ai/lambda_code/requirements.txt -t lambda_layer/python,
          cd lambda_layer,
          zip ../lambda_layers.zip -r .

  terraform:
    runs-on: ubuntu-latest
    needs: zip_package
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd terraform
          terraform init -backend-config='bucket=terraform-state-bucket-aws-cloud-sandbox'
          terraform fmt -diff ./
          terraform validate
          terraform plan -out=tfplan -var-file='sandbox.tfvars'
          terraform show tfplan
          terraform apply


